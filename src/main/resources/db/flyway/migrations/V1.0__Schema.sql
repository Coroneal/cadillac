-- tables
-- Table: BUYER
CREATE TABLE BUYER (
  ID int NOT NULL AUTO_INCREMENT,
  USER_ID int NOT NULL,
  CONSTRAINT BUYER_pk PRIMARY KEY (ID)
);

-- Table: DEAL
CREATE TABLE DEAL (
  ID int NOT NULL AUTO_INCREMENT,
  MECHANIC_ID int NOT NULL,
  BUYER_ID int NOT NULL,
  CONSTRAINT DEAL_pk PRIMARY KEY (ID)
);

-- Table: EVENT_ENTITY
CREATE TABLE EVENT_ENTITY (
  TYPE varchar(20) NOT NULL,
  CONSTRAINT EVENT_ENTITY_pk PRIMARY KEY (TYPE)
);

-- Table: EVENT_TYPE
CREATE TABLE EVENT_TYPE (
  NAME varchar(20) NOT NULL,
  CONSTRAINT EVENT_TYPE_pk PRIMARY KEY (NAME)
);

-- Table: HISTORY
CREATE TABLE HISTORY (
  ID int NOT NULL AUTO_INCREMENT,
  EVENT_TYPE_NAME varchar(20) NOT NULL,
  EVENT_ENTITY_TYPE varchar(20) NOT NULL,
  DATE date NOT NULL,
  DESCRIPTION varchar(1000) NULL,
  EVENT_ID int NULL,
  CONSTRAINT HISTORY_pk PRIMARY KEY (ID)
);

-- Table: MECHANIC
CREATE TABLE MECHANIC (
  ID int NOT NULL AUTO_INCREMENT,
  USER_ID int NOT NULL,
  CONSTRAINT MECHANIC_pk PRIMARY KEY (ID)
);

-- Table: MESSAGE
CREATE TABLE MESSAGE (
  ID int NOT NULL AUTO_INCREMENT,
  MECHANIC_ID int NOT NULL,
  BUYER_ID int NOT NULL,
  TEXT varchar(2000) NULL,
  DATE date NOT NULL,
  FROM_BUYER bool NOT NULL DEFAULT true,
  CONSTRAINT MESSAGE_pk PRIMARY KEY (ID)
);

-- Table: OPINION
CREATE TABLE OPINION (
  ID int NOT NULL AUTO_INCREMENT,
  MECHANIC_ID int NOT NULL,
  BUYER_ID int NOT NULL,
  CONSTRAINT OPINION_pk PRIMARY KEY (ID)
);

-- Table: PAYMENT
CREATE TABLE PAYMENT (
  ID int NOT NULL AUTO_INCREMENT,
  DEAL_ID int NOT NULL,
  CONSTRAINT PAYMENT_pk PRIMARY KEY (ID)
);

-- Table: RAPORT
CREATE TABLE RAPORT (
  ID int NOT NULL AUTO_INCREMENT,
  DEAL_ID int NOT NULL,
  DOCUMENT blob NOT NULL,
  DATE date NOT NULL,
  CONSTRAINT RAPORT_pk PRIMARY KEY (ID)
);

-- Table: USER
CREATE TABLE USER (
  ID int NOT NULL AUTO_INCREMENT,
  LOGIN varchar(20) NOT NULL,
  PASSWORD varchar(200) NOT NULL,
  CONSTRAINT USER_pk PRIMARY KEY (ID)
);

-- foreign keys
-- Reference: BUYER_USER (table: BUYER)
ALTER TABLE BUYER ADD CONSTRAINT BUYER_USER FOREIGN KEY BUYER_USER (USER_ID)
REFERENCES USER (ID);

-- Reference: DEAL_BUYER (table: DEAL)
ALTER TABLE DEAL ADD CONSTRAINT DEAL_BUYER FOREIGN KEY DEAL_BUYER (BUYER_ID)
REFERENCES BUYER (ID);

-- Reference: DEAL_MECHANIC (table: DEAL)
ALTER TABLE DEAL ADD CONSTRAINT DEAL_MECHANIC FOREIGN KEY DEAL_MECHANIC (MECHANIC_ID)
REFERENCES MECHANIC (ID);

-- Reference: HISTORY_EVENT_ENTITY (table: HISTORY)
ALTER TABLE HISTORY ADD CONSTRAINT HISTORY_EVENT_ENTITY FOREIGN KEY HISTORY_EVENT_ENTITY (EVENT_ENTITY_TYPE)
REFERENCES EVENT_ENTITY (TYPE);

-- Reference: HISTORY_EVENT_TYPE (table: HISTORY)
ALTER TABLE HISTORY ADD CONSTRAINT HISTORY_EVENT_TYPE FOREIGN KEY HISTORY_EVENT_TYPE (EVENT_TYPE_NAME)
REFERENCES EVENT_TYPE (NAME);

-- Reference: MECHANIC_USER (table: MECHANIC)
ALTER TABLE MECHANIC ADD CONSTRAINT MECHANIC_USER FOREIGN KEY MECHANIC_USER (USER_ID)
REFERENCES USER (ID);

-- Reference: MESSAGE_BUYER (table: MESSAGE)
ALTER TABLE MESSAGE ADD CONSTRAINT MESSAGE_BUYER FOREIGN KEY MESSAGE_BUYER (BUYER_ID)
REFERENCES BUYER (ID);

-- Reference: MESSAGE_MECHANIC (table: MESSAGE)
ALTER TABLE MESSAGE ADD CONSTRAINT MESSAGE_MECHANIC FOREIGN KEY MESSAGE_MECHANIC (MECHANIC_ID)
REFERENCES MECHANIC (ID);

-- Reference: OPINION_BUYER (table: OPINION)
ALTER TABLE OPINION ADD CONSTRAINT OPINION_BUYER FOREIGN KEY OPINION_BUYER (BUYER_ID)
REFERENCES BUYER (ID);

-- Reference: OPINION_MECHANIC (table: OPINION)
ALTER TABLE OPINION ADD CONSTRAINT OPINION_MECHANIC FOREIGN KEY OPINION_MECHANIC (MECHANIC_ID)
REFERENCES MECHANIC (ID);

-- Reference: PAYMENT_DEAL (table: PAYMENT)
ALTER TABLE PAYMENT ADD CONSTRAINT PAYMENT_DEAL FOREIGN KEY PAYMENT_DEAL (DEAL_ID)
REFERENCES DEAL (ID);

-- Reference: RAPORT_DEAL (table: RAPORT)
ALTER TABLE RAPORT ADD CONSTRAINT RAPORT_DEAL FOREIGN KEY RAPORT_DEAL (DEAL_ID)
REFERENCES DEAL (ID);

-- End of file.

